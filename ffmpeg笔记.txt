-f fmt 强迫采用格式fmt
-I filename 输入文件
-vcodec codec 强制使用codec编解码方式。如果用copy表示原始编解码数据必须被拷贝。
-vf scale 调整分辨率
-r fps 设置帧频 缺省25
-g gop_size 设置图像组大小
---------------音频---------------------
-acodec codec 使用codec编解码
-ac channels 设置通道 缺省为1
-ar freq 设置音频采样率
-ab bitrate 设置音频码率

ffmpeg 
-f dshow -i video=screen-capture-recorder 
-f dshow -i audio=virtual-audio-capturer 
-vf scale=1280:720 -vcodec libx264 -r 19 -g 19    //x264视频编码格式
-acodec libvo_aacenc -ac 2 -ar 44100 -ab 128     //aac音频码流
-pix_fmt yuv420p -tune zerolatency -preset ultrafast -f flv  "rtmp://172.16.27.98/hls/test"
//yuv420p 像素处理视频原始数据 --零延时，设置--tune zerolatency 通过--preset的参数调节编码速度和质量的平衡。

视频播放器播放一个互联网上的视频文件，需要经过以下几个步骤：解协议，解封装，解码视音频，视音频同步。
如果播放本地文件则不需要解协议，为以下几个步骤：解封装，解码视音频，视音频同步。

解协议的作用，就是将流媒体协议的数据，解析为标准的相应的封装格式数据。视音频在网络上传播的时候，常常
采用各种流媒体协议，例如HTTP，RTMP，或是MMS等等。这些协议在传输视音频数据的同时，也会传输一些信令数据。
这些信令数据包括对播放的控制（播放，暂停，停止），或者对网络状态的描述等。解协议的过程中会去除掉信令数
据而只保留视音频数据。例如，采用RTMP协议传输的数据，经过解协议操作后，输出FLV格式的数据。

解封装的作用，就是将输入的封装格式的数据，分离成为音频流压缩编码数据和视频流压缩编码数据。封装格式种类
很多，例如MP4，MKV，RMVB，TS，FLV，AVI等等，它的作用就是将已经压缩编码的视频数据和音频数据按照一定的格
式放到一起。例如，FLV格式的数据，经过解封装操作后，输出H.264编码的视频码流和AAC编码的音频码流。

解码的作用，就是将视频/音频压缩编码数据，解码成为非压缩的视频/音频原始数据。音频的压缩编码标准包含AAC，
MP3，AC-3等等，视频的压缩编码标准则包含H.264，MPEG2，VC-1等等。解码是整个系统中最重要也是最复杂的一个
环节。通过解码，压缩编码的视频数据输出成为非压缩的颜色数据，例如YUV420P，RGB等等；压缩编码的音频数据
输出成为非压缩的音频抽样数据，例如PCM数据。

视音频同步的作用，就是根据解封装模块处理过程中获取到的参数信息，同步解码出来的视频和音频数据，并将视频
音频数据送至系统的显卡和声卡播放出来。